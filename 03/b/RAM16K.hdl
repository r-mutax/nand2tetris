// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // store addressing
    DMux4Way(in=load, sel=address[0..1], a=loada, b=loadb, c=loadc, d=loadd);

    // register
    Mux16(a=outa, b=in, sel=loada, out=ra);
    RAM4K(in=ra, load=loada, address=address[2..13], out=outa);

    Mux16(a=outb, b=in, sel=loadb, out=rb);
    RAM4K(in=rb, load=loadb, address=address[2..13], out=outb);

    Mux16(a=outc, b=in, sel=loadc, out=rc);   
    RAM4K(in=rc, load=loadc, address=address[2..13], out=outc);

    Mux16(a=outd, b=in, sel=loadd, out=rd);   
    RAM4K(in=rd, load=loadd, address=address[2..13], out=outd);
    
    // select output
    Mux4Way16(a=outa, b=outb, c=outc, d=outd, sel=address[0..1], out=out);

}